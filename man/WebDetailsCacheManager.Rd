% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{WebDetailsCacheManager}
\alias{WebDetailsCacheManager}
\title{WebDetailsCacheManager class}
\description{
WebDetailsCacheManager class

WebDetailsCacheManager class
}
\details{
A manager for multiple WebDetailsCache objects.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{caches}}{List of WebDetailsCache objects.}

\item{\code{cache_dir}}{Directory for cache files.}

\item{\code{log_dir}}{Directory for log files.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WebDetailsCacheManager-new}{\code{WebDetailsCacheManager$new()}}
\item \href{#method-WebDetailsCacheManager-add_cache}{\code{WebDetailsCacheManager$add_cache()}}
\item \href{#method-WebDetailsCacheManager-build_cache}{\code{WebDetailsCacheManager$build_cache()}}
\item \href{#method-WebDetailsCacheManager-build_cache_threaded}{\code{WebDetailsCacheManager$build_cache_threaded()}}
\item \href{#method-WebDetailsCacheManager-clear}{\code{WebDetailsCacheManager$clear()}}
\item \href{#method-WebDetailsCacheManager-clone}{\code{WebDetailsCacheManager$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-new"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-new}{}}}
\subsection{Method \code{new()}}{
initialize a new WebDetailsCacheManager.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$new(cache_dir = "cache", log_dir = "logs")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cache_dir}}{Directory to store cache files (default "cache").}

\item{\code{log_dir}}{Directory for log files (default "logs").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-add_cache"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-add_cache}{}}}
\subsection{Method \code{add_cache()}}{
Add a new cache to the manager.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$add_cache(
  cache_name,
  list_all_entries_url,
  key_field_extraction_func,
  single_entry_details_url,
  flush_threshold = 100,
  list_all_entries_page_size = 1000
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cache_name}}{Unique name for the cache.}

\item{\code{list_all_entries_url}}{URL for listing all entries. Expected to accept a query parameter list with page_size and return JSON containing:
\itemize{
\item next: the next URL in the paginated results
\item count: the number of results
\item results: the list of entries
}}

\item{\code{key_field_extraction_func}}{Function to extract the key field from each entry in the results.}

\item{\code{single_entry_details_url}}{URL template for fetching details of a single entry. Must include a placeholder \code{{entry_key}} that will be replaced by the actual key.}

\item{\code{flush_threshold}}{Number of entry_details to process before flushing to disk (default 100).}

\item{\code{list_all_entries_page_size}}{Number of entries per page (default 1000).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-build_cache"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-build_cache}{}}}
\subsection{Method \code{build_cache()}}{
Build caches for all managed WebDetailsCache objects.

Iterates through each cache and builds it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$build_cache()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-build_cache_threaded"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-build_cache_threaded}{}}}
\subsection{Method \code{build_cache_threaded()}}{
Build caches in parallel.

Processes each cache in parallel and returns a list of results.
Set up a per-cache log file in the worker.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$build_cache_threaded()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-clear"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-clear}{}}}
\subsection{Method \code{clear()}}{
Clear all managed caches.

Removes all caches from memory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$clear()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WebDetailsCacheManager-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WebDetailsCacheManager-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WebDetailsCacheManager$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
